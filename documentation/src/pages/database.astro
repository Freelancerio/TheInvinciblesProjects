---
layout: '../layouts/Layout.astro'
title: 'Why this schema fits our system'
description: 'Justification of our relational schema: normalization, integrity constraints, scalability, and analytics readiness.'
---

<!-- Keep the same ERD image -->
<section class="not-prose mb-6 px-6 max-w-4xl mx-auto">
  <figure class="rounded-xl border border-slate-200 bg-white/70 p-3 dark:border-slate-700 dark:bg-slate-900/60">
    <img
      src="database_diagram.svg"
      alt="High-level database schema"
      class="mx-auto block max-w-full h-auto rounded"
    />
    <figcaption class="mt-2 text-center text-sm text-slate-500 dark:text-slate-400">
      High-level database schema (system overview).
    </figcaption>
  </figure>
</section>

<section class="not-prose mb-6 px-6 max-w-4xl mx-auto">
  <h1 class="text-3xl font-bold tracking-tight">Why this schema fits our system</h1>
</section>

<div class="prose prose-slate dark:prose-invert px-6 max-w-4xl mx-auto">

  <h2>1. Clear separation of concerns --> cleaner logic and safer data</h2>
  <ul>
    <li><strong>USERS</strong> handles all account-level information (<code>username</code>, <code>created_at</code>, <code>last_login</code>), independent of predictions or bets. This ensures authentication and analytics data stay decoupled.</li>
    <li><strong>TEAMS</strong> stores reference data (<code>team_name</code>, <code>alias</code>, <code>stadium</code>, <code>league</code>, <code>is_active</code>) and changes infrequently. All matches and predictions reference it, ensuring consistent identity across seasons.</li>
    <li><strong>FIXTURES</strong> and <strong>MATCHES</strong> are intentionally separated:
      <ul>
        <li><strong>FIXTURES</strong> = scheduled events (<code>home_team_id</code>, <code>away_team_id</code>, <code>match_datetime</code>, <code>status</code>, <code>season_year</code>).</li>
        <li><strong>MATCHES</strong> = completed results for a fixture (<code>home_team_score</code>, <code>away_team_score</code>, <code>match_status</code>, <code>completed_at</code>).</li>
        <li>This split prevents mutable history - fixture data can be updated without corrupting past match outcomes.</li>
      </ul>
    </li>
    <li><strong>MATCH_TEAM_STATS</strong> captures granular performance metrics per team per match (shots, possession, fouls, cards, etc.). It stores one row per team per match - the correct granularity for analytical models.</li>
    <li><strong>PREDICTIONS</strong> vs <strong>USER_PREDICTIONS</strong> enforces a clean boundary between system/model outputs and user actions:
      <ul>
        <li><strong>PREDICTIONS</strong> = system or expert forecasts tied to a <code>match_id</code> (<code>predicted_winner_team_id</code>, <code>predicted_scores</code>, <code>confidence_percentage</code>, <code>source</code>).</li>
        <li><strong>USER_PREDICTIONS</strong> = individual user guesses (<code>predicted_home_score</code>, <code>predicted_away_score</code>, <code>reasoning</code>, timestamps). This enables accurate leaderboards and scoring.</li>
      </ul>
    </li>
    <li><strong>BETS</strong> captures monetary interactions separately (<code>stake_amount</code>, <code>odds</code>, <code>bet_type</code>, <code>status</code>, <code>potential_payout</code>, <code>settled_at</code>). This isolation guarantees financial integrity and simplifies auditing.</li>
  </ul>

  <p><strong>Result:</strong> Each entity represents a single unit of responsibility. Relationships between them (e.g. users --> predictions, fixtures --> matches) reflect natural boundaries in our betting and analytics workflow.</p>

  <h2>2. Normalization where it matters (3NF) + smart denormalization where it helps</h2>
  <ul>
    <li>Core entities (<strong>USERS</strong>, <strong>TEAMS</strong>, <strong>FIXTURES</strong>, <strong>MATCHES</strong>) follow 3NF, minimizing duplication.</li>
    <li><strong>MATCH_TEAM_STATS</strong> uses a composite key (<code>match_id</code>, <code>team_id</code>) to ensure exactly two rows per match.</li>
    <li><strong>BETS</strong> references <code>prediction_id</code> when applicable to enable payout calculations while maintaining referential consistency.</li>
  </ul>

  <h2>3. Referential integrity and cardinalities enforced by constraints</h2>
  <ul>
    <li><strong>TEAMS ↔ FIXTURES:</strong> FKs <code>home_team_id</code> and <code>away_team_id</code> link to TEAMS. A unique constraint on (<code>home_team_id</code>, <code>away_team_id</code>, <code>match_datetime</code>) prevents duplicate fixtures.</li>
    <li><strong>FIXTURES ↔ MATCHES:</strong> <code>fixture_id</code> FK ensures every match belongs to a real fixture.</li>
    <li><strong>MATCHES ↔ MATCH_TEAM_STATS:</strong> unique composite key ensures one stat row per team per match.</li>
    <li><strong>PREDICTIONS ↔ USER_PREDICTIONS:</strong> separates model data from user data but still allows correlation through <code>match_id</code>.</li>
    <li><strong>BETS:</strong> constrained to positive stakes and valid odds to ensure data correctness.</li>
  </ul>

  <h2>4. Consistent datatypes and safe numeric precision</h2>
  <ul>
    <li>IDs are integer surrogates for fast joins.</li>
    <li>Decimals are used for financials to avoid floating-point rounding errors.</li>
    <li>Timestamps are stored in UTC for consistency across time zones.</li>
  </ul>

  <h2>5. Indexed for performance-critical queries</h2>
  <ul>
    <li><strong>FIXTURES:</strong> indexed on <code>season_year</code> and <code>match_datetime</code> for fast scheduling queries.</li>
    <li><strong>MATCHES:</strong> indexed on <code>fixture_id</code> and <code>completed_at</code> for result lookups.</li>
    <li><strong>MATCH_TEAM_STATS:</strong> composite index (<code>match_id</code>, <code>team_id</code>).</li>
    <li><strong>PREDICTIONS</strong> and <strong>USER_PREDICTIONS:</strong> indexed by <code>match_id</code> and <code>user_id</code> for leaderboard and accuracy queries.</li>
    <li><strong>BETS:</strong> indexed by <code>user_id</code> and <code>placed_at</code> for account history.</li>
  </ul>

  <h2>6. Scalable and extensible design</h2>
  <ul>
    <li>Supports multiple seasons and leagues via <code>season_year</code> and <code>league</code> fields.</li>
    <li>Future-ready for adding <em>player stats</em>, <em>lineups</em>, or <em>events</em> without breaking existing relations.</li>
  </ul>

  <h2>7. Analytics and model readiness</h2>
  <ul>
    <li><strong>MATCHES</strong> + <strong>MATCH_TEAM_STATS</strong> provide the base data for ELO, form, or xG models.</li>
    <li><strong>PREDICTIONS</strong> store timestamped model outputs for historical benchmarking.</li>
    <li><strong>USER_PREDICTIONS</strong> support skill metrics and competitive leaderboards.</li>
    <li><strong>BETS</strong> allow user-ROI and system-profitability analysis.</li>
  </ul>

  <h2>8. Operational safety and auditability</h2>
  <ul>
    <li>Immutable match results; restricted deletes to preserve integrity.</li>
    <li>Role-based access through <code>USERS.role</code>.</li>
    <li>Transactionally consistent bet settlements to prevent race conditions.</li>
  </ul>

  <h2>9. Data invariants</h2>
  <ul>
    <li><code>home_team_id != away_team_id</code>.</li>
    <li><code>stake_amount > 0</code>, <code>odds >= 1.0</code>.</li>
    <li>Each match --> exactly 2 <strong>MATCH_TEAM_STATS</strong> rows.</li>
    <li>Predicted confidence between 0-100%.</li>
  </ul>

  <h2>10. Alternatives considered</h2>
  <ul>
    <li>Single combined match/fixture table --> made scheduling and history harder.</li>
    <li>Embedding stats inside MATCHES --> duplicated columns and slowed updates.</li>
    <li>No dedicated PREDICTIONS table --> mixed user data with models, losing auditability.</li>
  </ul>

  <h2>Summary</h2>
  <p>
    This relational schema enforces logical separation between user behavior, system predictions, and event results. It maintains strict referential integrity,
    scales smoothly with new seasons and data types, and supports real-time analytics for predictions, bets, and match stats - all while keeping financial and historical data auditable and consistent.
  </p>

</div>
