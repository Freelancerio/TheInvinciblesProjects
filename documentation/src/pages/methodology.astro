---
layout: '../layouts/Layout.astro'
title: 'Git Methodology - GitLab Flow'
description: 'Our branching strategy and policies for day-to-day development.'
---

<section class="not-prose mb-6 pl-6">
  <h1 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-100">
    Git Methodology: <span class="text-indigo-600">GitLab Flow</span>
  </h1>
  <p class="mt-2 text-gray-700 dark:text-gray-300">
    We use <strong>GitLab Flow</strong> to keep feature work, reviews, and deployments simple and transparent.
    It combines the clarity of feature branches with environment-based releases, which fits our student project pace.
  </p>
</section>

<div class="prose prose-slate dark:prose-invert pl-6">
  <h2>Why we chose GitLab Flow</h2>
  <ul>
    <li><strong>Simple mental model:</strong> one primary branch (<code>main</code>) + short-lived feature branches. No complicated multi-branch release trains.</li>
    <li><strong>Fits CI/CD and environments:</strong> changes flow from <em>feature</em> &rarr; <em>dev</em> &rarr; <em>main</em> and can be deployed to preview/staging/production easily.</li>
    <li><strong>Review-friendly:</strong> everything lands through Merge Requests (MRs) with checks, code review, and status badges.</li>
    <li><strong>Low overhead for a small team:</strong> fewer permanent branches than Git Flow; more structure than trunk-only.</li>
  </ul>

  <blockquote class="text-gray-800 dark:text-gray-200">
    <p><strong>TL;DR</strong> - GitLab Flow gives us predictable, low-friction collaboration with clear promotion from feature to production, without a maze of long-lived branches.</p>
  </blockquote>

  <h2>Core ideas of GitLab Flow</h2>
  <ol>
    <li><strong>Main as the single source of truth:</strong> It is always shippable and protected.</li>
    <li><strong>Feature branches:</strong> Short-lived, focused on a single task, merged by MR.</li>
    <li><strong>Environment branches (optional):</strong> like <code>dev</code> or <code>staging</code> reflect deployment targets, not long-term development tracks.</li>
    <li><strong>Promotions via MR:</strong> Checks (build, tests, lint) at each step.</li>
  </ol>

  <h2>Our branch model</h2>
  <div class="not-prose -mx-2 overflow-x-auto sm:mx-0">
    <table class="min-w-[640px] w-full table-auto border-collapse text-sm">
      <thead>
        <tr class="bg-slate-100 dark:bg-slate-800/50">
          <th class="px-3 py-2 text-left font-semibold">Branch</th>
          <th class="px-3 py-2 text-left font-semibold">Purpose</th>
          <th class="px-3 py-2 text-left font-semibold">Who can merge</th>
          <th class="px-3 py-2 text-left font-semibold">Protection</th>
        </tr>
      </thead>
      <tbody class="divide-y divide-slate-200 dark:divide-slate-800">
        <tr>
          <td class="px-3 py-2"><code>main</code></td>
          <td class="px-3 py-2">Production-ready, always deployable</td>
          <td class="px-3 py-2">Maintainers (after review)</td>
          <td class="px-3 py-2">Protected: MR required, status checks</td>
        </tr>
        <tr class="bg-slate-50/50 dark:bg-slate-900/30">
          <td class="px-3 py-2"><code>dev</code></td>
          <td class="px-3 py-2">Integration branch for QA/preview</td>
          <td class="px-3 py-2">Maintainers</td>
          <td class="px-3 py-2">Protected: MR required, CI checks</td>
        </tr>
        <tr>
          <td class="px-3 py-2"><code>feature/*</code></td>
          <td class="px-3 py-2">Short-lived task/issue branches</td>
          <td class="px-3 py-2">Anyone (via MR)</td>
          <td class="px-3 py-2">Unprotected; CI + review before merge</td>
        </tr>
      </tbody>
    </table>
  </div>

  <h2>How a change flows</h2>
  <pre class="not-prose rounded-xl bg-slate-900 text-slate-100 p-4 text-sm overflow-auto">
feature/123-login
   |  (MR to dev with CI checks)
   v
dev  -> preview deploy (optional manual QA)
   |  (MR to main with CI + reviews)
   v
main -> production deploy
  </pre>

  <h2>Team rules and conventions</h2>
  <ul>
    <li><strong>Branch naming:</strong> <code>feature/&lt;ticket-id&gt;-&lt;slug&gt;</code> (e.g., <code>feature/123-signup-form</code>)</li>
    <li><strong>Small MRs:</strong> aim for under 300 lines changed to keep reviews fast.</li>
    <li><strong>CI checks block merges:</strong> unit tests, lint, and build must pass.</li>
    <li><strong>Reviews:</strong> at least 1 approval; author cannot self-approve.</li>
    <li><strong>Keep main green:</strong> no direct commits; all merges via MR.</li>
    <li><strong>Tags (optional):</strong> tag releases on <code>main</code> as <code>vX.Y.Z</code> for milestones.</li>
  </ul>

  <h2>Why not Git Flow or Trunk-Based?</h2>
  <ul>
    <li><strong>Git Flow:</strong> adds many long-lived branches (develop, release, hotfix), which is overkill for our timeline.</li>
    <li><strong>Trunk-Based:</strong> very fast but expects high discipline and feature flags; we prefer the safety of a <code>dev</code> gate.</li>
  </ul>

  <h2>Do / Don't</h2>
  <div class="grid gap-4 sm:grid-cols-2 not-prose">
    <div class="rounded-2xl border border-emerald-300/50 bg-emerald-50 dark:bg-emerald-900/20 p-4">
      <h3 class="font-semibold text-emerald-800 dark:text-emerald-200">Do</h3>
      <ul class="mt-2 list-disc pl-5 text-sm">
        <li>Open issues before branches to scope work.</li>
        <li>Write meaningful commit messages (<code>type(scope): summary</code>).</li>
        <li>Keep branches short-lived; rebase/merge often.</li>
        <li>Let CI be your guardrail - fix red builds immediately.</li>
      </ul>
    </div>
    <div class="rounded-2xl border border-rose-300/50 bg-rose-50 dark:bg-rose-900/20 p-4">
      <h3 class="font-semibold text-rose-800 dark:text-rose-200">Don't</h3>
      <ul class="mt-2 list-disc pl-5 text-sm">
        <li>Commit directly to <code>main</code>.</li>
        <li>Bundle unrelated changes into one MR.</li>
        <li>Leave branches stale - delete after merge.</li>
        <li>Skip tests or reviews to "save time".</li>
      </ul>
    </div>
  </div>

  <h2>References</h2>
  <p class="text-sm">
    We used public guides on branching strategies to shape a lightweight flow suitable for our project timeline (for example, the overview on AB Tasty's blog).
  </p>
</div>
