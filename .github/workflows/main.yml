name: Testing and Deploy
on:
  push:
    branches: [ main, auth-feature ]
  pull_request:
    branches: [ main, auth-feature ]
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Backend Testing
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven' 
    
    - name: Create Firebase service account file (mock)
      run: |
        mkdir -p Backend/src/main/resources/config
        echo '{"type":"service_account","project_id":"test","private_key_id":"test","private_key":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7W8jYbF8x9vKq\n-----END PRIVATE KEY-----","client_email":"test@test.iam.gserviceaccount.com","client_id":"test"}' \
          > Backend/src/main/resources/config/firebase-service-account.json
    
    - name: Run Backend tests with coverage
      run: |
        cd Backend
        mvn clean verify -Dspring.profiles.active=ci
      env:
        SPRING_PROFILES_ACTIVE: test
    
    - name: Upload Backend coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./Backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
    
    # Frontend Testing
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: Frontend/package-lock.json
    
    - name: Install Frontend dependencies
      run: |
        cd Frontend
        npm ci
    
    - name: Run Frontend tests with coverage
      run: |
        cd Frontend
        npm run test:coverage
    
    - name: Upload Frontend coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./Frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/auth-feature')
    
    steps:
    - name: Trigger Render Deploy
      run: |
        curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
